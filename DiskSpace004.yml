---
- hosts: windows
  gather_facts: false
  vars:
     DiskThreshold: 5

  tasks:
#   code to copy FREESPACE.PS1 to C:\working on server
  - name: run PS_Script
    win_shell: C:\working\DiskSpace.ps1
      msg:
      - "Dispspace.ps1 running"

#  - name: copy disk space information from file
#    win_shell:
#      Select-String -Path C:\working\DiskSpace.txt -pattern "@{FreeSpace="
#    register: freespace
#
#  - name: read file to get free disk space
#    set_fact: freediskspace={{ freespace.stdout_lines }}
#
#  - name: trim file to get free disk space value
#    set_fact: data1={{ freediskspace | regex_replace('.*=') | regex_replace ("'.*") }}
#
#  - name: check if disk space above threshold
#    set_fact:
#     DiskSpace:
#       "{{ (DiskThreshold | int) >= (data1 | int) }}"
#
#  - name: Get server name
#    win_command: powershell.exe -
#    args:
#      stdin: hostname
#    register: server_name
#
#  - name: Disk Space below threshold server Information
#    debug:
#      msg:
#        - "***********************************************************"
#        - "{{ server_name.stdout_lines[0] }} has only {{ data1 }}GB free on the C Drive"
#        - "Free up some Space on the C Drive before patching commences"
#        - "***********************************************************"
#    when: DiskSpace == true
#
#  - name: Disk Space below threshold server Information
#    debug:
#      msg:
#        - "{{ server_name.stdout_lines[0] }} has {{ data1 }}GB free on the C Drive"
#        - "Patching can commence when the server is scheduled to be updated"
#    when: DiskSpace == false
#
#  -  name: Sleep for 10 seconds and timeout
#     wait_for:
#       delay: 10
#       timeout: 0
#
#  - name: run PS_Script
#    win_shell: C:\working\CreateCopy.ps1
#      msg: "copying"
#
#  -  name: Sleep for 10 seconds and timeout
#     tags: sleep60
#     wait_for:
#       delay: 10
#       timeout: 0
#
#  - name: run PS_Script
#    win_shell: C:\working\Archive.ps1
#      msg: "archiving"
#
#  -  name: Sleep for 10 seconds and timeout
#     tags: sleep60
#     wait_for:
#       delay: 10
#       timeout: 0
#
#  - name: run PS_Script
#    win_shell: C:\working\delete.ps1
#      msg: "deleting"
#
#  -  name: Sleep for 10 seconds and timeout
#     tags: sleep60
#     wait_for:
#       delay: 10
#       timeout: 0
#
#  - name: run PS_Script
#    win_shell: C:\working\ACL.ps1
#      msg: "ACL"

#  -  name: Sleep for 5 seconds and timeout
#     tags: sleep60
#     wait_for:
#       delay: 5
#       timeout: 0

#      msg: "Playbook completed"
