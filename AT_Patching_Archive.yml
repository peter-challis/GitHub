---
- hosts: node1
  gather_facts: false
  become: yes
  become_user: root

  vars_prompt:
  - name: in_path
    prompt: Location of patch files?  i.e. /var/reports
    private: no

  - name: in_pattern
    prompt: File pattern?  i.e. *_Installed.csv
    private: no

  - name: in_age
    prompt: Archive files older than 79 weeks (18 months) will be deleted.  Amend if required using 1d (1 days) or 3w (3 weeks)
    private: no

  - name: in_dest
    prompt: Archived files rep.  i.e. /var/reports/archive
    private: no

  tasks:
  - name: Find patching files matching {{in_pattern}} in {{in_path}} aged {{in_age}}
    find:
      paths: "{{in_path}}"
      patterns: "{{in_pattern}}"
      recurse: yes
    register: files_matched

  - name: Print the files that matched {{in_pattern}} in {{in_path}}
    debug:
      msg: "{{ item.path }}"
    with_items: '{{ files_matched.files }}'

  - name: server name for archive file
    shell: hostname
    register: srv_out

  - name: to screen
    debug:
      msg: "{{srv_out.stdout}}"

  - name: datestamp for archive file
    shell: "date +%Y-%m-%d%H-%M-%S"
    register: tstamp

  - name: Set var for datestamp
    set_fact:
     cur_date: "{{ tstamp.stdout[0:10]}}"
     cur_time: "{{ tstamp.stdout[10:]}}"

  - name: Create a directory if it does not exist
    ansible.builtin.file:
      path: /var/reports/archive
      state: directory
      mode: '0755'

  - name: Archive to gz file type all the files which matched {{in_pattern}} in {{in_path}}
    archive:
      path: "{{ item.path }}"
      remove: True
      dest: "/var/reports/archive/PatchingReport-{{srv_out.stdout}}:{{ cur_date }}:{{ cur_time }}.gz"
      format: gz
    with_items: '{{ files_matched.files }}'

  - name: Find archive files matching .gz in {{ in_dest }} aged {{ in_age }}
    find:
      paths: "{{in_dest}}"
      patterns: "*.gz"
      age: "{{in_age}}"
      recurse: yes
    register: archive_matched

  - name: Delete archive files from {{ archive_matched.files }} older than {{ in_age }}
    file:
      path: "{{ in_dest }}"
      state: absent
    with_items: "{{ archive_matched.files }}"
