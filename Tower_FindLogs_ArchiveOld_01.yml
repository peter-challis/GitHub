---
- hosts: node2
  gather_facts: false
  become: yes
  become_user: root
  
# ask for path or file, file name, inc ref and how many days old the file needs to be before deleting/archiving
# Non-tower usage - [ansible@control ~]$ ansible-playbook -i inventory zip02.yml -e "in_path=/home in_pattern=m*.log"

  vars_prompt:
  - name: in_path
    prompt: Where are the files?  i.e. /home/toweradmin/logs
    private: no

  - name: in_pattern
    prompt: Whats their pattern?  i.e. message*.log
    private: no

  tasks:
  - name: Pre change disk check
    command: df -h {{in_pattern}}
    register: space
    
  - name: Print the filesystem usage before any activity has been taken
    debug:
      var: space.stdout_lines
      
  - name: Store the filesystem usage output in /home/toweradmin/logs/DiskSpacePreArchive.log
    copy:
      content: "{{ space.stdout_lines }}"
#      dest: "/home/toweradmin/logs/DiskSpacePreArchive-{{ansible_date_time.iso8601}}.log"
      dest: "/home/toweradmin/logs/DiskSpacePreArchive.log"

  - name: Ansible find files matching {{in_pattern}} in {{in_path}}
    find:
      paths: "{{in_path}}"
      patterns: "{{in_pattern}}"
#      age: 24h
#      age_stamp: atime
#      recurse: yes
    register: files_matched

  - name: Print the files that matched {{in_pattern}} in {{in_path}}
    debug:
      msg: "{{ item.path }}"
    with_items: '{{ files_matched.files }}'

  - name: Archive to gz file type all the files which matched {{in_pattern}} in {{in_path}}
    archive:
      path: "{{ item.path }}"
#      remove: True
#      dest: /var/test1gz
      format: gz
    with_items: '{{ files_matched.files }}'

  - name: Delete the files which matched {{in_pattern}} in {{in_path}}
    file:
      path: "{{ item.path }}"
      state: absent
    with_items: '{{ files_matched.files }}'

  - name: Post change disk check
    command: df -h {{in_pattern}}
    register: space
  - debug:
      var: space.stdout_lines
      
  - name: Store the filesystem usage output in /home/toweradmin/logs/DiskSpacePostArchive.log
    copy:
      content: "{{ space.stdout_lines }}"
      dest: "/home/toweradmin/logs/DiskSpacePostArchive.log"
